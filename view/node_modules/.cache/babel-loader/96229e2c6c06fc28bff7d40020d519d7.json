{"ast":null,"code":"var _jsxFileName = \"/home/davi/development/mk-info/view/src/components/common/input/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState } from 'react';\nimport styles from './styles.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Input({\n  type,\n  name,\n  placeholder,\n  maxLength,\n  required,\n  mask\n}) {\n  _s();\n\n  const [data, setData] = useState('');\n  const formatData = useCallback(event => {\n    console.log(name === 'cpf');\n\n    if (name === 'cpf') {\n      setData(event.target.value.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/, \"$1.$2.$3-$4\"));\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: type,\n      name: name,\n      placeholder: placeholder,\n      maxLength: maxLength,\n      className: styles.customInput,\n      value: undefined,\n      required: required,\n      onChange: event => mask && formatData(event)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Input, \"W8BiYUrhMmWhXJu/Yf25dsKJUR0=\");\n\n_c = Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/home/davi/development/mk-info/view/src/components/common/input/index.tsx"],"names":["useCallback","useState","styles","Input","type","name","placeholder","maxLength","required","mask","data","setData","formatData","event","console","log","target","value","replace","customInput","undefined"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAWA,OAAO,SAASC,KAAT,CAAe;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA,WAAd;AAA2BC,EAAAA,SAA3B;AAAsCC,EAAAA,QAAtC;AAAgDC,EAAAA;AAAhD,CAAf,EAAmF;AAAA;;AACxF,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMW,UAAU,GAAGZ,WAAW,CAAEa,KAAD,IAAgD;AAC7EC,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAI,KAAK,KAArB;;AACA,QAAIA,IAAI,KAAK,KAAb,EAAoB;AAClBM,MAAAA,OAAO,CAACE,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmBC,OAAnB,CAA2B,8BAA3B,EAA2D,aAA3D,CAAD,CAAP;AACD;AACF,GAL6B,EAK3B,CAACR,IAAD,CAL2B,CAA9B;AAOA,sBACE;AAAA,2BACE;AACE,MAAA,IAAI,EAAEN,IADR;AAEE,MAAA,IAAI,EAAEC,IAFR;AAGE,MAAA,WAAW,EAAEC,WAHf;AAIE,MAAA,SAAS,EAAEC,SAJb;AAKE,MAAA,SAAS,EAAEL,MAAM,CAACiB,WALpB;AAME,MAAA,KAAK,EAAEC,SANT;AAOE,MAAA,QAAQ,EAAEZ,QAPZ;AAQE,MAAA,QAAQ,EAAEK,KAAK,IAAIJ,IAAI,IAAIG,UAAU,CAACC,KAAD;AARvC;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAcD;;GAxBeV,K;;KAAAA,K","sourcesContent":["import { useCallback, useState } from 'react'\nimport styles from './styles.module.scss'\n\ninterface PropsInput {\n  type: string\n  name: string\n  placeholder: string\n  maxLength?: number\n  required?: boolean\n  mask?: boolean\n}\n\nexport function Input({ type, name, placeholder, maxLength, required, mask }: PropsInput) {\n  const [data, setData] = useState('')\n\n  const formatData = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(name === 'cpf')\n    if (name === 'cpf') {\n      setData(event.target.value.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/, \"$1.$2.$3-$4\"))\n    }\n  }, [data])\n\n  return (\n    <>\n      <input\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        maxLength={maxLength}\n        className={styles.customInput}\n        value={undefined}\n        required={required}\n        onChange={event => mask && formatData(event)}\n      />\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}