{"ast":null,"code":"var _jsxFileName = \"/home/davi/Development/mk-info/view/src/pages/Login/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button } from '../../components/common/button';\nimport { Input } from '../../components/common/input';\nimport { Range } from '../../components/common/range';\nimport styles from './styles.module.scss';\nimport { Link, Redirect } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { Form } from '@unform/web';\nimport VerifyIfExistUser from './verifyIfExistUser';\nimport { Message } from '../../components/common/message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const [userExist, setUserExist] = useState(false);\n  const [invalidUser, setInvalidUser] = useState(false);\n\n  const onSubmit = async data => {\n    const existingUser = await VerifyIfExistUser(data.user.toLowerCase(), data.password);\n    !existingUser && setInvalidUser(true);\n    existingUser && localStorage.setItem('loggedUser', 'true');\n    setUserExist(existingUser);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: styles.loginContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: styles.logoContainer,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"M\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"user\",\n          register: register(\"user\"),\n          placeholder: \"Usu\\xE1rio\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          name: \"password\",\n          register: register(\"password\"),\n          placeholder: \"Senha\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          children: \"Cadastrar-se\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          btnName: \"Entrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), userExist && /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), invalidUser && /*#__PURE__*/_jsxDEV(Message, {\n          type: \"error\",\n          children: \"Usu\\xE1rio invalido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Range, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"FeA/wIL9uA9kV+gXv/rC7x3Wn2s=\", false, function () {\n  return [useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/davi/Development/mk-info/view/src/pages/Login/index.tsx"],"names":["Button","Input","Range","styles","Link","Redirect","React","useState","useForm","Form","VerifyIfExistUser","Message","Login","register","handleSubmit","userExist","setUserExist","invalidUser","setInvalidUser","onSubmit","data","existingUser","user","toLowerCase","password","localStorage","setItem","loginContainer","logoContainer"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,gCAAvB;AACA,SAASC,KAAT,QAAsB,+BAAtB;AACA,SAASC,KAAT,QAAsB,+BAAtB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AAEA,SAASC,OAAT,QAAwB,iCAAxB;;;;AAEA,MAAMC,KAAe,GAAG,MAAM;AAAA;;AAC5B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA6BN,OAAO,EAA1C;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMY,QAAQ,GAAG,MAAOC,IAAP,IAAwB;AACvC,UAAMC,YAAY,GAAG,MAAMX,iBAAiB,CAACU,IAAI,CAACE,IAAL,CAAUC,WAAV,EAAD,EAA0BH,IAAI,CAACI,QAA/B,CAA5C;AACA,KAACH,YAAD,IAAiBH,cAAc,CAAC,IAAD,CAA/B;AACAG,IAAAA,YAAY,IAAII,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,MAAnC,CAAhB;AACAV,IAAAA,YAAY,CAACK,YAAD,CAAZ;AACD,GALD;;AAOA,sBACE;AAAA,4BACE;AAAK,MAAA,EAAE,EAAElB,MAAM,CAACwB,cAAhB;AAAA,8BACE;AAAK,QAAA,EAAE,EAAExB,MAAM,CAACyB,aAAhB;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEd,YAAY,CAACK,QAAD,CAA5B;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,QAAQ,EAAEN,QAAQ,CAAC,MAAD,CAHpB;AAIE,UAAA,WAAW,EAAC,YAJd;AAKE,UAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,QAAQ,EAAEA,QAAQ,CAAC,UAAD,CAHpB;AAIE,UAAA,WAAW,EAAC,OAJd;AAKE,UAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,gBARF,eAgBE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF,eAiBE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAjBF,EAmBGE,SAAS,iBAAI,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAnBhB,EAoBGE,WAAW,iBAAI,QAAC,OAAD;AAAS,UAAA,IAAI,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA4BE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YA5BF;AAAA,kBADF;AAgCD,CA5CD;;GAAML,K;UAC+BJ,O;;;KAD/BI,K;AA8CN,eAAeA,KAAf","sourcesContent":["import { Button } from '../../components/common/button'\nimport { Input } from '../../components/common/input'\nimport { Range } from '../../components/common/range'\n\nimport styles from './styles.module.scss'\n\nimport { Link, Redirect } from 'react-router-dom'\nimport React, { useState } from 'react'\nimport { useForm } from \"react-hook-form\"\nimport { Form } from '@unform/web'\nimport VerifyIfExistUser from './verifyIfExistUser'\nimport { ILogin } from '../../global/interfaces'\nimport { Message } from '../../components/common/message'\n\nconst Login: React.FC = () => {\n  const { register, handleSubmit } = useForm()\n  const [userExist, setUserExist] = useState(false)\n  const [invalidUser, setInvalidUser] = useState(false)\n\n  const onSubmit = async (data: ILogin) => {\n    const existingUser = await VerifyIfExistUser(data.user.toLowerCase(), data.password)\n    !existingUser && setInvalidUser(true)\n    existingUser && localStorage.setItem('loggedUser', 'true')\n    setUserExist(existingUser)\n  }\n\n  return (\n    <>\n      <div id={styles.loginContainer}>\n        <div id={styles.logoContainer}>\n          <span>M</span>\n        </div>\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          <Input\n            type=\"text\"\n            name=\"user\"\n            register={register(\"user\")}\n            placeholder=\"Usuário\"\n            required\n          />\n          <Input\n            type=\"password\"\n            name=\"password\"\n            register={register(\"password\")}\n            placeholder=\"Senha\"\n            required\n          />\n\n          <Link to=\"/signup\">Cadastrar-se</Link>\n          <Button type=\"submit\" btnName=\"Entrar\"/>\n          \n          {userExist && <Redirect to=\"/\" />}\n          {invalidUser && <Message type='error'>Usuário invalido</Message>}\n        </Form>\n      </div>\n      <Range />\n    </>\n  )\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}