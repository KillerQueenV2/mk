{"ast":null,"code":"var _jsxFileName = \"/home/davi/Development/mk-info/view/src/pages/ConfigAccount/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Button } from '../../components/common/button';\nimport { UsersRepository } from '../../repository/Users';\nimport styles from './styles.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ConfigAccount() {\n  _s();\n\n  const [nome, setNome] = useState('');\n  const [email, setEmail] = useState('');\n  const [cpf, setCpf] = useState('');\n  const [senha, setSenha] = useState('');\n  const userId = Number(localStorage.getItem('userId'));\n  useEffect(() => {\n    const getCurrentUser = async () => {\n      const user = new UsersRepository();\n      const [getUser] = await user.getById(userId);\n      setNome(getUser.nome);\n      setEmail(getUser.email);\n      setCpf(getUser.cpf);\n      setSenha(getUser.senha);\n    };\n\n    getCurrentUser();\n  }, []);\n\n  function updateUserdata() {\n    const user = new UsersRepository();\n    user.put({\n      nome,\n      email,\n      cpf,\n      senha\n    }, userId);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.card,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Informa\\xE7\\xF5es da sua conta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: nome,\n        className: styles.customInput,\n        type: \"text\",\n        name: \"nome\",\n        onChange: e => setNome(e.target.value),\n        placeholder: \"Nome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        className: styles.customInput,\n        type: \"email\",\n        name: \"email\",\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: cpf,\n        className: styles.customInput,\n        type: \"text\",\n        name: \"cpf\",\n        onChange: e => setCpf(e.target.value),\n        placeholder: \"CPF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: senha,\n        className: styles.customInput,\n        type: \"text\",\n        name: \"senha\",\n        onChange: e => setSenha(e.target.value),\n        placeholder: \"Nova senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        btnName: \"Salvar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ConfigAccount, \"DJBjB+ZtPDomgT/CxO6sNzPnpqI=\");\n\n_c = ConfigAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfigAccount\");","map":{"version":3,"sources":["/home/davi/Development/mk-info/view/src/pages/ConfigAccount/index.tsx"],"names":["useEffect","useState","Button","UsersRepository","styles","ConfigAccount","nome","setNome","email","setEmail","cpf","setCpf","senha","setSenha","userId","Number","localStorage","getItem","getCurrentUser","user","getUser","getById","updateUserdata","put","container","card","customInput","e","target","value"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport { Button } from '../../components/common/button'\nimport { UsersRepository } from '../../repository/Users'\n\nimport styles from './styles.module.scss'\n\nexport default function ConfigAccount() {\n  const [nome, setNome] = useState('')\n  const [email, setEmail] = useState('')\n  const [cpf, setCpf] = useState('')\n  const [senha, setSenha] = useState('')\n  \n  const userId = Number(localStorage.getItem('userId'))\n\n  useEffect(() => {\n    const getCurrentUser = async () => {\n      const user = new UsersRepository()\n      const [getUser] = await user.getById(userId)\n\n      setNome(getUser.nome)\n      setEmail(getUser.email)\n      setCpf(getUser.cpf)\n      setSenha(getUser.senha)\n    }\n    getCurrentUser()\n  }, [])\n\n  function updateUserdata() {\n    const user = new UsersRepository()\n    user.put({ nome, email, cpf, senha }, userId)\n  }\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.card}>\n        <h2>Informações da sua conta</h2>\n        <input\n          value={nome}\n          className={styles.customInput}\n          type='text'\n          name='nome'\n          onChange={e => setNome(e.target.value)}\n          placeholder='Nome'\n        />\n        <input\n          value={email}\n          className={styles.customInput}\n          type='email'\n          name='email'\n          onChange={e => setEmail(e.target.value)}\n          placeholder='Email'\n        />\n        <input\n          value={cpf}\n          className={styles.customInput}\n          type='text'\n          name='cpf'\n          onChange={e => setCpf(e.target.value)}\n          placeholder='CPF'\n        />\n        <input\n          value={senha}\n          className={styles.customInput}\n          type='text'\n          name='senha'\n          onChange={e => setSenha(e.target.value)}\n          placeholder='Nova senha'\n        />\n        <br />\n        <Button type='button' btnName='Salvar' />\n      </div>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}