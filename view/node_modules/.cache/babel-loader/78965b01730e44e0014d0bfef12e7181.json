{"ast":null,"code":"var _jsxFileName = \"/home/davi/development/mk-info/view/src/components/common/input/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState } from 'react';\nimport { formatCpf } from '../../../global/formatters';\nimport styles from './styles.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Input(props) {\n  _s();\n\n  const [data, setData] = useState('');\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const formatData = useCallback(event => {\n    props.name === 'cpf' && setData(formatCpf(event.target.value));\n  }, [props.name]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: props.type,\n      name: props.name,\n      ...register(\"user\"),\n      placeholder: props.placeholder,\n      maxLength: props.maxLength,\n      className: styles.customInput,\n      value: props.mask ? data : undefined,\n      required: props.required,\n      onChange: props.mask ? formatData : undefined\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Input, \"AVsccymtSU8zYX5BNQtmrnVajR8=\", true);\n\n_c = Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/home/davi/development/mk-info/view/src/components/common/input/index.tsx"],"names":["useCallback","useState","formatCpf","styles","Input","props","data","setData","register","handleSubmit","useForm","formatData","event","name","target","value","type","placeholder","maxLength","customInput","mask","undefined","required"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,SAASC,SAAT,QAA0B,4BAA1B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAYA,OAAO,SAASC,KAAT,CAAeC,KAAf,EAAkC;AAAA;;AACvC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEO,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA6BC,OAAO,EAA1C;AAEA,QAAMC,UAAU,GAAGX,WAAW,CAAEY,KAAD,IAAgD;AAC5EP,IAAAA,KAAK,CAACQ,IAAN,KAAe,KAAhB,IAA0BN,OAAO,CAACL,SAAS,CAACU,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAV,CAAjC;AACD,GAF6B,EAE3B,CAACV,KAAK,CAACQ,IAAP,CAF2B,CAA9B;AAIA,sBACE;AAAA,2BACE;AACE,MAAA,IAAI,EAAER,KAAK,CAACW,IADd;AAEE,MAAA,IAAI,EAAEX,KAAK,CAACQ,IAFd;AAAA,SAGML,QAAQ,CAAC,MAAD,CAHd;AAIE,MAAA,WAAW,EAAEH,KAAK,CAACY,WAJrB;AAKE,MAAA,SAAS,EAAEZ,KAAK,CAACa,SALnB;AAME,MAAA,SAAS,EAAEf,MAAM,CAACgB,WANpB;AAOE,MAAA,KAAK,EAAEd,KAAK,CAACe,IAAN,GAAad,IAAb,GAAoBe,SAP7B;AAQE,MAAA,QAAQ,EAAEhB,KAAK,CAACiB,QARlB;AASE,MAAA,QAAQ,EAAEjB,KAAK,CAACe,IAAN,GAAaT,UAAb,GAA0BU;AATtC;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAeD;;GAvBejB,K;;KAAAA,K","sourcesContent":["import { useCallback, useState } from 'react'\nimport { formatCpf } from '../../../global/formatters'\nimport styles from './styles.module.scss'\n\ninterface PropsInput {\n  type: string\n  name: string\n  register?: () => any\n  placeholder: string\n  maxLength?: number\n  required?: boolean\n  mask?: boolean\n}\n\nexport function Input(props: PropsInput) {\n  const [data, setData] = useState('')\n  const { register, handleSubmit } = useForm();\n\n  const formatData = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    (props.name === 'cpf') && setData(formatCpf(event.target.value))\n  }, [props.name])\n\n  return (\n    <>\n      <input\n        type={props.type}\n        name={props.name}\n        {...register(\"user\")}\n        placeholder={props.placeholder}\n        maxLength={props.maxLength}\n        className={styles.customInput}\n        value={props.mask ? data : undefined}\n        required={props.required}\n        onChange={props.mask ? formatData : undefined}\n      />\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}