{"ast":null,"code":"var _jsxFileName = \"/home/davi/Development/mk-info/view/src/pages/ConfigAccount/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Button } from '../../components/common/button';\nimport { UsersRepository } from '../../repository/Users';\nimport styles from './styles.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ConfigAccount() {\n  _s();\n\n  const [currentUser, setCurrentUserUser] = useState();\n  useEffect(() => {\n    const getCurrentUser = async () => {\n      const userId = Number(localStorage.getItem('userId'));\n      const user = new UsersRepository();\n      const getUser = await user.getById(userId);\n      setCurrentUserUser(getUser);\n      console.log(currentUser);\n    };\n\n    getCurrentUser();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.card,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Informa\\xE7\\xF5es da sua conta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), currentUser === null || currentUser === void 0 ? void 0 : currentUser.map(user => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.customInput,\n          value: user.nome,\n          type: \"text\",\n          name: \"nome\",\n          placeholder: \"Nome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: user.email,\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: user.cpf,\n          type: \"text\",\n          name: \"cpf\",\n          placeholder: \"CPF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: user.senha,\n          type: \"text\",\n          name: \"senha\",\n          placeholder: \"Nova senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 91\n        }, this)]\n      }, void 0, true)), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        btnName: \"Salvar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ConfigAccount, \"U0NTyYry2V6R427JTn5b2wqHGy8=\");\n\n_c = ConfigAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfigAccount\");","map":{"version":3,"sources":["/home/davi/Development/mk-info/view/src/pages/ConfigAccount/index.tsx"],"names":["useEffect","useState","Button","UsersRepository","styles","ConfigAccount","currentUser","setCurrentUserUser","getCurrentUser","userId","Number","localStorage","getItem","user","getUser","getById","console","log","container","card","map","customInput","nome","email","cpf","senha"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,gCAAvB;AAEA,SAASC,eAAT,QAAgC,wBAAhC;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACtC,QAAM,CAACC,WAAD,EAAcC,kBAAd,IAAoCN,QAAQ,EAAlD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,cAAc,GAAG,YAAY;AACjC,YAAMC,MAAM,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAD,CAArB;AAEA,YAAMC,IAAI,GAAG,IAAIV,eAAJ,EAAb;AACA,YAAMW,OAAO,GAAG,MAAMD,IAAI,CAACE,OAAL,CAAaN,MAAb,CAAtB;AACAF,MAAAA,kBAAkB,CAACO,OAAD,CAAlB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYX,WAAZ;AACD,KAPD;;AAQAE,IAAAA,cAAc;AACf,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACE;AAAK,IAAA,SAAS,EAAEJ,MAAM,CAACc,SAAvB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEd,MAAM,CAACe,IAAvB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGb,WAFH,aAEGA,WAFH,uBAEGA,WAAW,CAAEc,GAAb,CAAkBP,IAAD,iBAChB;AAAA,gCACE;AAAO,UAAA,SAAS,EAAET,MAAM,CAACiB,WAAzB;AAAuC,UAAA,KAAK,EAAER,IAAI,CAACS,IAAnD;AAAyD,UAAA,IAAI,EAAC,MAA9D;AAAqE,UAAA,IAAI,EAAC,MAA1E;AAAiF,UAAA,WAAW,EAAC;AAA7F;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,KAAK,EAAET,IAAI,CAACU,KAAnB;AAA0B,UAAA,IAAI,EAAC,OAA/B;AAAuC,UAAA,IAAI,EAAC,OAA5C;AAAoD,UAAA,WAAW,EAAC;AAAhE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAO,UAAA,KAAK,EAAEV,IAAI,CAACW,GAAnB;AAAwB,UAAA,IAAI,EAAC,MAA7B;AAAoC,UAAA,IAAI,EAAC,KAAzC;AAA+C,UAAA,WAAW,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAO,UAAA,KAAK,EAAEX,IAAI,CAACY,KAAnB;AAA0B,UAAA,IAAI,EAAC,MAA/B;AAAsC,UAAA,IAAI,EAAC,OAA3C;AAAmD,UAAA,WAAW,EAAC;AAA/D;AAAA;AAAA;AAAA;AAAA,gBAJF,eAIgF;AAAA;AAAA;AAAA;AAAA,gBAJhF;AAAA,sBADD,CAFH,eAUE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA/BuBpB,a;;KAAAA,a","sourcesContent":["import { useEffect, useState } from 'react'\nimport { Button } from '../../components/common/button'\nimport { IUser } from '../../global/interfaces'\nimport { UsersRepository } from '../../repository/Users'\n\nimport styles from './styles.module.scss'\n\nexport default function ConfigAccount() {\n  const [currentUser, setCurrentUserUser] = useState<IUser | any>()\n  \n  useEffect(() => {\n    const getCurrentUser = async () => {\n      const userId = Number(localStorage.getItem('userId'))\n\n      const user = new UsersRepository()\n      const getUser = await user.getById(userId)\n      setCurrentUserUser(getUser)\n      console.log(currentUser)\n    }\n    getCurrentUser()\n  }, [])\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.card}>\n        <h2>Informações da sua conta</h2>\n        {currentUser?.map((user: IUser) => (\n          <>\n            <input className={styles.customInput}  value={user.nome} type='text' name='nome' placeholder='Nome' />\n            <input value={user.email} type='email' name='email' placeholder='Email' />\n            <input value={user.cpf} type='text' name='cpf' placeholder='CPF' />\n            <input value={user.senha} type='text' name='senha' placeholder='Nova senha' /><br />\n          </>\n        ))}\n        <Button type='button' btnName='Salvar' />\n      </div>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}