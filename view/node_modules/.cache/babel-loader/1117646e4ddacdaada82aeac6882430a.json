{"ast":null,"code":"var _jsxFileName = \"/home/davi/development/mk-info/view/src/components/common/input/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState } from 'react';\nimport styles from './styles.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Input({\n  type,\n  name,\n  placeholder,\n  required,\n  mask\n}) {\n  _s();\n\n  const [cpf, setCpf] = useState('');\n  const formatCpf = useCallback(event => {\n    setCpf(event.target.value.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/, \"$1.$2.$3-$4\"));\n  }, [mask]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: type,\n      name: name,\n      placeholder: placeholder,\n      maxLength: 14,\n      className: styles.customInput,\n      value: cpf,\n      required: required,\n      onChange: event => mask && formatCpf(event)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Input, \"i8AdigVEc2YGJIXVo21yve1GCAg=\");\n\n_c = Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/home/davi/development/mk-info/view/src/components/common/input/index.tsx"],"names":["useCallback","useState","styles","Input","type","name","placeholder","required","mask","cpf","setCpf","formatCpf","event","target","value","replace","customInput"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAWA,OAAO,SAASC,KAAT,CAAe;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA,WAAd;AAA2BC,EAAAA,QAA3B;AAAqCC,EAAAA;AAArC,CAAf,EAAwE;AAAA;;AAC7E,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAC,EAAD,CAA9B;AAEA,QAAMU,SAAS,GAAGX,WAAW,CAAEY,KAAD,IAAgD;AAC5EF,IAAAA,MAAM,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,OAAnB,CAA2B,8BAA3B,EAA2D,aAA3D,CAAD,CAAN;AACD,GAF4B,EAE1B,CAACP,IAAD,CAF0B,CAA7B;AAIA,sBACE;AAAA,2BACE;AACE,MAAA,IAAI,EAAEJ,IADR;AAEE,MAAA,IAAI,EAAEC,IAFR;AAGE,MAAA,WAAW,EAAEC,WAHf;AAIE,MAAA,SAAS,EAAE,EAJb;AAKE,MAAA,SAAS,EAAEJ,MAAM,CAACc,WALpB;AAME,MAAA,KAAK,EAAEP,GANT;AAOE,MAAA,QAAQ,EAAEF,QAPZ;AAQE,MAAA,QAAQ,EAAEK,KAAK,IAAIJ,IAAI,IAAIG,SAAS,CAACC,KAAD;AARtC;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAcD;;GArBeT,K;;KAAAA,K","sourcesContent":["import { useCallback, useState } from 'react'\nimport styles from './styles.module.scss'\n\ninterface PropsInput {\n  type: string\n  name: string\n  placeholder: string\n  maxLength?: number\n  required?: boolean\n  mask?: boolean\n}\n\nexport function Input({ type, name, placeholder, required, mask }: PropsInput) {\n  const [cpf, setCpf] = useState('')\n\n  const formatCpf = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setCpf(event.target.value.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/, \"$1.$2.$3-$4\"))\n  }, [mask])\n\n  return (\n    <>\n      <input\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        maxLength={14}\n        className={styles.customInput}\n        value={cpf}\n        required={required}\n        onChange={event => mask && formatCpf(event)}\n      />\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}